language: cpp

sudo: false

compiler:
#  - gcc
  - clang

python: '3.6'

env:
  global:
    - LLVM_VERSION=3.8.0
    - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
    - DISPLAY=":99.0"
    - AUDIODEV="null"
    - XVFB_OPTS=":99.0 -ac -screen 0 1280x1024x24 -ac +extension GLX +extension RANDR +render -noreset"
  matrix:
    - GODOT_TARGET=x11 PYTHON_BACKEND=cpython
    # - GODOT_TARGET=x11 PYTHON_BACKEND=pypy

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
# Out of order (http://lists.llvm.org/pipermail/llvm-dev/2016-May/100303.html)
#      - llvm-toolchain-precise
    packages:
      - build-essential
      - scons
      - pkg-config
      - libx11-dev
      - libxcursor-dev
      - libasound2-dev
      - libfreetype6-dev
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libssl-dev
      - libxinerama-dev
      - libxrandr-dev
      # Need gcc > 4.6 for -std=c++11
      - gcc-5
      - g++-5
      - python3
      - python3-pip
#      - clang-3.9
      - valgrind

before_install:
  - pip3 install virtualenv --user
  - if [[ "$CXX" == "clang++" ]]; then wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH; fi
  - if [[ "$CXX" == "clang++" ]]; then mkdir $HOME/clang+llvm; fi
  - if [[ "$CXX" == "clang++" ]]; then tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang+llvm --strip-components 1; fi
  - if [[ "$CXX" == "clang++" ]]; then export PATH=$HOME/clang+llvm/bin:$PATH; fi
  - if [[ "$CXX" == "clang++" ]]; then clang --version; fi
# Needed because scons doesn't inherit the customized $PATH env
  - if [[ "$CXX" == "clang++" ]]; then export CC=$HOME/clang+llvm/bin/clang; fi
  - if [[ "$CXX" == "g++" ]]; then export CC=gcc-5; fi
  - $CC --version
  - scons --version

before_script:
# Start X11 server
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- $XVFB_OPTS"
  - sleep 3 # give xvfb some time to start

script:
  - set -e  # Enable fail on first error
  - scons platform=x11-64 backend=$PYTHON_BACKEND CC=$CC
# Tests need x11 server with opengl3 or compile godot with platform=server (both not working so far...)
  # - LIBGL_ALWAYS_SOFTWARE=1 scons DEBUG=valgrind platform=x11-64 backend=$PYTHON_BACKEND test
  - set +e

before_deploy:
  - export BUILD_NAME=`cd build && ls | grep -v main | head -n 1`
  - mv build/$BUILD_NAME $BUILD_NAME
  - tar -cjf $BUILD_NAME.tar.bz2 $BUILD_NAME

deploy:
  provider: releases
  api_key:
    secure: IGucQcPBy6g10GiyLXb25AU4Ie3NwiWJlbgL3maY9gt7hPrYXa9EhmpXqxZMVw5Kv3mShnqlIKb3QcDCS0iuJBD7i++HX32brA3fhlehSea9V5cbp+uZT+bO4ZVdd7lOr9pTNsbN3ny7Dow125EoO4/D897oJc2NSGe1ul5Kgn285H87vC9KdtOxzErk3Jcf/4UO+qFMCtMKfShQa8bHgKGJ/QMvlVtfNWRLzGSp+SMCH6O2mKrCpbPcCajzRc4jH/rZE8AcpoUwMBfvMvT1y0c/1qXsRh5d98aGMgctXTehxv13YNbx6hsOFXU1Kn5xQF+nzHeZQmUQjWO81JflYmrm3yG4nbX9DdoIzg4zHVVXEN69xZPvyyH1dh8G8b3eDag7faFidNA6qmbQ978hRaDWOnwwzWBkEc19Ah6pYIrmwHPO5nq+mmzGIfcfJCIspRe7cv//Ab6eZxJnhK2g20AbIRvcIEL1o1OU+CsBfZcFouD7j2fD8K99HhRNJTIomx9SyHTAvwBTzRUKFNGjAW6TCrRilfV68VS5wRmjVYbpq8RJYQNG/NIjTgx+7H8L9XKb9fe+hYU2vHolUIFgZAvoFqeThJC/EcynBpbiSe6A4x3yadrZ8taLYEXPVYyoJQXlgjGgfSi7j98LdbFWEojNvbyMh2dnHwyz0YXfTK8=
  file: "$BUILD_NAME.tar.bz2"
  on:
    repo: touilleMan/godot-python
tags: true
