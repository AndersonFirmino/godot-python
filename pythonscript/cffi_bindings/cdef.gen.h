/********************************************************/
/* AUTOGENERATED by tools/generate_gdnative_cffidefs.py */
/********************************************************/
typedef enum godot_error {GODOT_OK, GODOT_FAILED, GODOT_ERR_UNAVAILABLE, GODOT_ERR_UNCONFIGURED, GODOT_ERR_UNAUTHORIZED, GODOT_ERR_PARAMETER_RANGE_ERROR, GODOT_ERR_OUT_OF_MEMORY, GODOT_ERR_FILE_NOT_FOUND, GODOT_ERR_FILE_BAD_DRIVE, GODOT_ERR_FILE_BAD_PATH, GODOT_ERR_FILE_NO_PERMISSION, GODOT_ERR_FILE_ALREADY_IN_USE, GODOT_ERR_FILE_CANT_OPEN, GODOT_ERR_FILE_CANT_WRITE, GODOT_ERR_FILE_CANT_READ, GODOT_ERR_FILE_UNRECOGNIZED, GODOT_ERR_FILE_CORRUPT, GODOT_ERR_FILE_MISSING_DEPENDENCIES, GODOT_ERR_FILE_EOF, GODOT_ERR_CANT_OPEN, GODOT_ERR_CANT_CREATE, GODOT_ERR_QUERY_FAILED, GODOT_ERR_ALREADY_IN_USE, GODOT_ERR_LOCKED, GODOT_ERR_TIMEOUT, GODOT_ERR_CANT_CONNECT, GODOT_ERR_CANT_RESOLVE, GODOT_ERR_CONNECTION_ERROR, GODOT_ERR_CANT_AQUIRE_RESOURCE, GODOT_ERR_CANT_FORK, GODOT_ERR_INVALID_DATA, GODOT_ERR_INVALID_PARAMETER, GODOT_ERR_ALREADY_EXISTS, GODOT_ERR_DOES_NOT_EXIST, GODOT_ERR_DATABASE_CANT_READ, GODOT_ERR_DATABASE_CANT_WRITE, GODOT_ERR_COMPILATION_FAILED, GODOT_ERR_METHOD_NOT_FOUND, GODOT_ERR_LINK_FAILED, GODOT_ERR_SCRIPT_FAILED, GODOT_ERR_CYCLIC_LINK, GODOT_ERR_INVALID_DECLARATION, GODOT_ERR_DUPLICATE_SYMBOL, GODOT_ERR_PARSE_ERROR, GODOT_ERR_BUSY, GODOT_ERR_SKIP, GODOT_ERR_HELP, GODOT_ERR_BUG, GODOT_ERR_PRINTER_ON_FIRE, GODOT_ERR_OMFG_THIS_IS_VERY_VERY_BAD, GODOT_ERR_WTF = GODOT_ERR_OMFG_THIS_IS_VERY_VERY_BAD} godot_error;
typedef bool godot_bool;
typedef int godot_int;
typedef float godot_real;
typedef void godot_object;
typedef struct godot_variant godot_variant;
typedef struct godot_string godot_string;
typedef struct godot_vector2 godot_vector2;
typedef struct godot_rect2 godot_rect2;
typedef struct godot_vector3 godot_vector3;
typedef struct godot_transform2d godot_transform2d;
typedef struct godot_plane godot_plane;
typedef struct godot_quat godot_quat;
typedef struct godot_rect3 godot_rect3;
typedef struct godot_basis godot_basis;
typedef struct godot_transform godot_transform;
typedef struct godot_color godot_color;
typedef struct godot_image godot_image;
typedef struct godot_node_path godot_node_path;
typedef struct godot_rid godot_rid;
typedef struct godot_input_event godot_input_event;
typedef struct godot_dictionary godot_dictionary;
typedef struct godot_array godot_array;
typedef struct godot_pool_byte_array godot_pool_byte_array;
typedef struct godot_pool_int_array godot_pool_int_array;
typedef struct godot_pool_real_array godot_pool_real_array;
typedef struct godot_pool_string_array godot_pool_string_array;
typedef struct godot_pool_vector2_array godot_pool_vector2_array;
typedef struct godot_pool_vector3_array godot_pool_vector3_array;
typedef struct godot_pool_color_array godot_pool_color_array;
typedef struct godot_string
{
  uint8_t _dont_touch_that[8];
} godot_string;
void godot_string_new(godot_string *p_str);
void godot_string_new_data(godot_string *p_str, const char *p_contents, const int p_size);
void godot_string_new_unicode_data(godot_string *p_str, const wchar_t *p_contents, const int p_size);
void godot_string_get_data(const godot_string *p_str, char *p_dest, int *p_size);
void godot_string_copy_string(const godot_string *p_dest, const godot_string *p_src);
wchar_t *godot_string_operator_index(godot_string *p_str, const godot_int p_idx);
const char *godot_string_c_str(const godot_string *p_str);
const wchar_t *godot_string_unicode_str(const godot_string *p_str);
godot_bool godot_string_operator_equal(const godot_string *p_a, const godot_string *p_b);
godot_bool godot_string_operator_less(const godot_string *p_a, const godot_string *p_b);
void godot_string_operator_plus(godot_string *p_dest, const godot_string *p_a, const godot_string *p_b);
void godot_string_destroy(godot_string *p_str);
typedef struct godot_vector2
{
  uint8_t _dont_touch_that[8];
} godot_vector2;
typedef struct godot_vector2 godot_vector2;
typedef struct godot_variant godot_variant;
void godot_vector2_new(godot_vector2 *r_dest, const godot_real p_x, const godot_real p_y);
void godot_vector2_as_string(godot_vector2 *p_self, godot_string *r_dest);
void godot_vector2_normalized(godot_vector2 *p_self, godot_vector2 *r_dest);
godot_real godot_vector2_length(godot_vector2 *p_self);
godot_real godot_vector2_angle(godot_vector2 *p_self);
godot_real godot_vector2_length_squared(godot_vector2 *p_self);
godot_real godot_vector2_distance_to(godot_vector2 *p_self, const godot_vector2 *p_to);
godot_real godot_vector2_distance_squared_to(godot_vector2 *p_self, const godot_vector2 *p_to);
godot_real godot_vector2_angle_to(godot_vector2 *p_self, const godot_vector2 *p_to);
godot_real godot_vector2_angle_to_point(godot_vector2 *p_self, const godot_vector2 *p_to);
void godot_vector2_linear_interpolate(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_vector2 *p_b, const godot_real p_t);
void godot_vector2_cubic_interpolate(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_vector2 *p_b, const godot_vector2 *p_pre_a, const godot_vector2 *p_post_b, const godot_real p_t);
void godot_vector2_rotated(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_real p_phi);
void godot_vector2_tangent(godot_vector2 *p_self, godot_vector2 *r_dest);
void godot_vector2_floor(godot_vector2 *p_self, godot_vector2 *r_dest);
void godot_vector2_snapped(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_vector2 *p_by);
godot_real godot_vector2_aspect(godot_vector2 *p_self);
godot_real godot_vector2_dot(godot_vector2 *p_self, const godot_vector2 *p_with);
void godot_vector2_slide(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_vector2 *p_n);
void godot_vector2_bounce(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_vector2 *p_n);
void godot_vector2_reflect(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_vector2 *p_n);
void godot_vector2_abs(godot_vector2 *p_self, godot_vector2 *r_dest);
void godot_vector2_clamped(godot_vector2 *p_self, godot_vector2 *r_dest, const godot_real p_length);
godot_vector2 godot_vector2_operator_add(const godot_vector2 *p_self, const godot_vector2 p_b);
godot_vector2 godot_vector2_operator_subtract(const godot_vector2 *p_self, const godot_vector2 p_b);
godot_vector2 godot_vector2_operator_multiply_vector(const godot_vector2 *p_self, const godot_vector2 p_b);
godot_vector2 godot_vector2_operator_multiply_scalar(const godot_vector2 *p_self, const godot_real p_b);
godot_vector2 godot_vector2_operator_divide_vector(const godot_vector2 *p_self, const godot_vector2 p_b);
godot_vector2 godot_vector2_operator_divide_scalar(const godot_vector2 *p_self, const godot_real p_b);
godot_bool godot_vector2_operator_equal(const godot_vector2 *p_self, const godot_vector2 p_b);
godot_bool godot_vector2_operator_less(const godot_vector2 *p_self, const godot_vector2 p_b);
void godot_vector2_set_x(godot_vector2 *p_self, const godot_real p_x);
void godot_vector2_set_y(godot_vector2 *p_self, const godot_real p_y);
godot_real godot_vector2_get_x(const godot_vector2 *p_self);
godot_real godot_vector2_get_y(const godot_vector2 *p_self);
typedef struct godot_rect2
{
  uint8_t _dont_touch_that[16];
} godot_rect2;
typedef struct godot_rect2 godot_rect2;
typedef struct godot_vector2 godot_vector2;
typedef struct godot_variant godot_variant;
void godot_rect2_new1(godot_rect2 *r_dest, const godot_vector2 *p_pos, const godot_vector2 *p_size);
void godot_rect2_new(godot_rect2 *r_dest, const godot_real p_x, const godot_real p_y, const godot_real p_width, const godot_real p_height);
void godot_rect2_as_string(godot_rect2 *p_self, godot_string *r_dest);
godot_real godot_rect2_get_area(godot_rect2 *p_self);
godot_bool godot_rect2_intersects(godot_rect2 *p_self, const godot_rect2 *p_b);
godot_bool godot_rect2_encloses(godot_rect2 *p_self, const godot_rect2 *p_b);
godot_bool godot_rect2_has_no_area(godot_rect2 *p_self);
void godot_rect2_clip(godot_rect2 *p_self, godot_rect2 *r_dest, const godot_rect2 *p_b);
void godot_rect2_merge(godot_rect2 *p_self, godot_rect2 *r_dest, const godot_rect2 *p_b);
godot_bool godot_rect2_has_point(godot_rect2 *p_self, const godot_vector2 *p_point);
void godot_rect2_grow(godot_rect2 *p_self, godot_rect2 *r_dest, const godot_real p_by);
void godot_rect2_expand(godot_rect2 *p_self, godot_rect2 *r_dest, const godot_vector2 *p_to);
typedef struct godot_vector3
{
  uint8_t _dont_touch_that[12];
} godot_vector3;
typedef struct godot_basis
{
  uint8_t _dont_touch_that[36];
} godot_basis;
typedef struct godot_basis godot_basis;
typedef struct godot_vector3 godot_vector3;
typedef struct godot_variant godot_variant;
void godot_basis_new1(godot_basis *r_dest, const godot_vector3 *p_x_axis, const godot_vector3 *p_y_axis, const godot_vector3 *p_z_axis);
void godot_basis_new2(godot_basis *r_dest, const godot_vector3 *p_axis, const godot_real p_phi);
void godot_basis_as_string(godot_basis *p_self, godot_string *r_dest);
void godot_basis_inverse(godot_basis *p_self, godot_basis *r_dest);
void godot_basis_transposed(godot_basis *p_self, godot_basis *r_dest);
void godot_basis_orthonormalized(godot_basis *p_self, godot_basis *r_dest);
godot_real godot_basis_determinant(godot_basis *p_self);
void godot_basis_rotated(godot_basis *p_self, godot_basis *r_dest, const godot_vector3 *p_axis, const godot_real p_phi);
void godot_basis_scaled(godot_basis *p_self, godot_basis *r_dest, const godot_vector3 *p_scale);
void godot_basis_get_scale(godot_basis *p_self, godot_vector3 *r_dest);
void godot_basis_get_euler(godot_basis *p_self, godot_vector3 *r_dest);
godot_real godot_basis_tdotx(godot_basis *p_self, const godot_vector3 *p_with);
godot_real godot_basis_tdoty(godot_basis *p_self, const godot_vector3 *p_with);
godot_real godot_basis_tdotz(godot_basis *p_self, const godot_vector3 *p_with);
void godot_basis_xform(godot_basis *p_self, godot_vector3 *r_dest, const godot_vector3 *p_v);
void godot_basis_xform_inv(godot_basis *p_self, godot_vector3 *r_dest, const godot_vector3 *p_v);
godot_int godot_basis_get_orthogonal_index(godot_basis *p_self);
void godot_basis_new(godot_basis *r_dest);
void godot_basis_new_with_euler_quat(godot_basis *r_dest, const godot_quat *p_euler);
void godot_basis_new_with_euler(godot_basis *r_dest, const godot_vector3 p_euler);
void godot_basis_new_with_axis_and_angle(godot_basis *r_dest, const godot_vector3 p_axis, const godot_real p_phi);
void godot_basis_new_with_rows(godot_basis *r_dest, const godot_vector3 p_row0, const godot_vector3 p_row1, const godot_vector3 p_row2);
typedef struct godot_basis godot_basis;
typedef struct godot_vector3 godot_vector3;
typedef struct godot_variant godot_variant;
void godot_vector3_new(godot_vector3 *r_dest, const godot_real p_x, const godot_real p_y, const godot_real p_z);
void godot_vector3_as_string(godot_vector3 *p_self, godot_string *r_dest);
godot_int godot_vector3_min_axis(godot_vector3 *p_self);
godot_int godot_vector3_max_axis(godot_vector3 *p_self);
godot_real godot_vector3_length(godot_vector3 *p_self);
godot_real godot_vector3_length_squared(godot_vector3 *p_self);
void godot_vector3_normalized(godot_vector3 *p_self, godot_vector3 *r_dest);
void godot_vector3_inverse(godot_vector3 *p_self, godot_vector3 *r_dest);
void godot_vector3_snapped(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_real p_by);
void godot_vector3_rotated(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_axis, const godot_real p_phi);
void godot_vector3_linear_interpolate(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_b, const godot_real p_t);
void godot_vector3_cubic_interpolate(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_b, const godot_vector3 *p_pre_a, const godot_vector3 *p_post_b, const godot_real p_t);
godot_real godot_vector3_dot(godot_vector3 *p_self, const godot_vector3 *p_b);
void godot_vector3_cross(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_b);
void godot_vector3_outer(godot_vector3 *p_self, godot_basis *r_dest, const godot_vector3 *p_b);
void godot_vector3_to_diagonal_matrix(godot_vector3 *p_self, godot_basis *r_dest);
void godot_vector3_abs(godot_vector3 *p_self, godot_vector3 *r_dest);
void godot_vector3_floor(godot_vector3 *p_self, godot_vector3 *r_dest);
void godot_vector3_ceil(godot_vector3 *p_self, godot_vector3 *r_dest);
godot_real godot_vector3_distance_to(godot_vector3 *p_self, const godot_vector3 *p_b);
godot_real godot_vector3_distance_squared_to(godot_vector3 *p_self, const godot_vector3 *p_b);
godot_real godot_vector3_angle_to(godot_vector3 *p_self, const godot_vector3 *p_to);
void godot_vector3_slide(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_n);
void godot_vector3_bounce(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_n);
void godot_vector3_reflect(godot_vector3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_n);
godot_vector3 godot_vector3_operator_add(const godot_vector3 *p_self, const godot_vector3 p_b);
godot_vector3 godot_vector3_operator_subtract(const godot_vector3 *p_self, const godot_vector3 p_b);
godot_vector3 godot_vector3_operator_multiply_vector(const godot_vector3 *p_self, const godot_vector3 p_b);
godot_vector3 godot_vector3_operator_multiply_scalar(const godot_vector3 *p_self, const godot_real p_b);
godot_vector3 godot_vector3_operator_divide_vector(const godot_vector3 *p_self, const godot_vector3 p_b);
godot_vector3 godot_vector3_operator_divide_scalar(const godot_vector3 *p_self, const godot_real p_b);
godot_bool godot_vector3_operator_equal(const godot_vector3 *p_self, const godot_vector3 p_b);
godot_bool godot_vector3_operator_less(const godot_vector3 *p_self, const godot_vector3 p_b);
void godot_vector3_set_axis(godot_vector3 *p_self, const godot_int p_axis, const godot_real p_val);
godot_real godot_vector3_get_axis(const godot_vector3 *p_self, const godot_int p_axis);
typedef struct godot_transform2d
{
  uint8_t _dont_touch_that[24];
} godot_transform2d;
typedef struct godot_variant
{
  uint8_t _dont_touch_that[24];
} godot_variant;
typedef enum godot_variant_type {GODOT_VARIANT_TYPE_NIL, GODOT_VARIANT_TYPE_BOOL, GODOT_VARIANT_TYPE_INT, GODOT_VARIANT_TYPE_REAL, GODOT_VARIANT_TYPE_STRING, GODOT_VARIANT_TYPE_VECTOR2, GODOT_VARIANT_TYPE_RECT2, GODOT_VARIANT_TYPE_VECTOR3, GODOT_VARIANT_TYPE_TRANSFORM2D, GODOT_VARIANT_TYPE_PLANE, GODOT_VARIANT_TYPE_QUAT, GODOT_VARIANT_TYPE_RECT3, GODOT_VARIANT_TYPE_BASIS, GODOT_VARIANT_TYPE_TRANSFORM, GODOT_VARIANT_TYPE_COLOR, GODOT_VARIANT_TYPE_IMAGE, GODOT_VARIANT_TYPE_NODE_PATH, GODOT_VARIANT_TYPE_RID, GODOT_VARIANT_TYPE_OBJECT, GODOT_VARIANT_TYPE_INPUT_EVENT, GODOT_VARIANT_TYPE_DICTIONARY, GODOT_VARIANT_TYPE_ARRAY, GODOT_VARIANT_TYPE_POOL_BYTE_ARRAY, GODOT_VARIANT_TYPE_POOL_INT_ARRAY, GODOT_VARIANT_TYPE_POOL_REAL_ARRAY, GODOT_VARIANT_TYPE_POOL_STRING_ARRAY, GODOT_VARIANT_TYPE_POOL_VECTOR2_ARRAY, GODOT_VARIANT_TYPE_POOL_VECTOR3_ARRAY, GODOT_VARIANT_TYPE_POOL_COLOR_ARRAY} godot_variant_type;
godot_variant_type godot_variant_get_type(const godot_variant *p_v);
void godot_variant_copy(godot_variant *r_dest, const godot_variant *p_src);
void godot_variant_new_nil(godot_variant *r_dest);
void godot_variant_new_bool(godot_variant *p_v, const godot_bool p_b);
void godot_variant_new_uint(godot_variant *r_dest, const uint64_t p_i);
void godot_variant_new_int(godot_variant *r_dest, const int64_t p_i);
void godot_variant_new_real(godot_variant *r_dest, const double p_r);
void godot_variant_new_string(godot_variant *r_dest, const godot_string *p_s);
void godot_variant_new_vector2(godot_variant *r_dest, const godot_vector2 *p_v2);
void godot_variant_new_rect2(godot_variant *r_dest, const godot_rect2 *p_rect2);
void godot_variant_new_vector3(godot_variant *r_dest, const godot_vector3 *p_v3);
void godot_variant_new_transform2d(godot_variant *r_dest, const godot_transform2d *p_t2d);
void godot_variant_new_plane(godot_variant *r_dest, const godot_plane *p_plane);
void godot_variant_new_quat(godot_variant *r_dest, const godot_quat *p_quat);
void godot_variant_new_rect3(godot_variant *r_dest, const godot_rect3 *p_rect3);
void godot_variant_new_basis(godot_variant *r_dest, const godot_basis *p_basis);
void godot_variant_new_transform(godot_variant *r_dest, const godot_transform *p_trans);
void godot_variant_new_color(godot_variant *r_dest, const godot_color *p_color);
void godot_variant_new_image(godot_variant *r_dest, const godot_image *p_img);
void godot_variant_new_node_path(godot_variant *r_dest, const godot_node_path *p_np);
void godot_variant_new_rid(godot_variant *r_dest, const godot_rid *p_rid);
void godot_variant_new_object(godot_variant *r_dest, const godot_object *p_obj);
void godot_variant_new_input_event(godot_variant *r_dest, const godot_input_event *p_event);
void godot_variant_new_dictionary(godot_variant *r_dest, const godot_dictionary *p_dict);
void godot_variant_new_array(godot_variant *r_dest, const godot_array *p_arr);
void godot_variant_new_pool_byte_array(godot_variant *r_dest, const godot_pool_byte_array *p_pba);
void godot_variant_new_pool_int_array(godot_variant *r_dest, const godot_pool_int_array *p_pia);
void godot_variant_new_pool_real_array(godot_variant *r_dest, const godot_pool_real_array *p_pra);
void godot_variant_new_pool_string_array(godot_variant *r_dest, const godot_pool_string_array *p_psa);
void godot_variant_new_pool_vector2_array(godot_variant *r_dest, const godot_pool_vector2_array *p_pv2a);
void godot_variant_new_pool_vector3_array(godot_variant *r_dest, const godot_pool_vector3_array *p_pv3a);
void godot_variant_new_pool_color_array(godot_variant *r_dest, const godot_pool_color_array *p_pca);
godot_bool godot_variant_as_bool(const godot_variant *p_self);
uint64_t godot_variant_as_uint(const godot_variant *p_self);
int64_t godot_variant_as_int(const godot_variant *p_self);
double godot_variant_as_real(const godot_variant *p_self);
void godot_variant_as_string(const godot_variant *p_self, godot_string *r_dest);
void godot_variant_as_vector2(const godot_variant *p_self, godot_vector2 *r_dest);
void godot_variant_as_rect2(const godot_variant *p_self, godot_rect2 *r_dest);
void godot_variant_as_vector3(const godot_variant *p_self, godot_vector3 *r_dest);
void godot_variant_as_transform2d(const godot_variant *p_self, godot_transform2d *r_dest);
void godot_variant_as_plane(const godot_variant *p_self, godot_plane *r_dest);
void godot_variant_as_quat(const godot_variant *p_self, godot_quat *r_dest);
void godot_variant_as_rect3(const godot_variant *p_self, godot_rect3 *r_dest);
void godot_variant_as_basis(const godot_variant *p_self, godot_basis *r_dest);
void godot_variant_as_transform(const godot_variant *p_self, godot_transform *r_dest);
void godot_variant_as_color(const godot_variant *p_self, godot_color *r_dest);
void godot_variant_as_image(const godot_variant *p_self, godot_image *r_dest);
void godot_variant_as_node_path(const godot_variant *p_self, godot_node_path *r_dest);
void godot_variant_as_rid(const godot_variant *p_self, godot_rid *r_dest);
godot_object *godot_variant_as_object(const godot_variant *p_self);
void godot_variant_as_input_event(const godot_variant *p_self, godot_input_event *r_dest);
void godot_variant_as_dictionary(const godot_variant *p_self, godot_dictionary *r_dest);
void godot_variant_as_array(const godot_variant *p_self, godot_array *r_dest);
void godot_variant_as_pool_byte_array(const godot_variant *p_self, godot_pool_byte_array *r_dest);
void godot_variant_as_pool_int_array(const godot_variant *p_self, godot_pool_int_array *r_dest);
void godot_variant_as_pool_real_array(const godot_variant *p_self, godot_pool_real_array *r_dest);
void godot_variant_as_pool_string_array(const godot_variant *p_self, godot_pool_string_array *r_dest);
void godot_variant_as_pool_vector2_array(const godot_variant *p_self, godot_pool_vector2_array *r_dest);
void godot_variant_as_pool_vector3_array(const godot_variant *p_self, godot_pool_vector3_array *r_dest);
void godot_variant_as_pool_color_array(const godot_variant *p_self, godot_pool_color_array *r_dest);
void godot_variant_call(godot_variant *p_self, godot_variant *r_dest, const godot_string *p_method, const godot_variant **p_args, const godot_int p_argcount);
godot_bool godot_variant_has_method(const godot_variant *p_self, const godot_string *p_method);
godot_bool godot_variant_operator_equal(const godot_variant *p_self, const godot_variant *p_other);
godot_bool godot_variant_operator_less(const godot_variant *p_self, const godot_variant *p_other);
godot_bool godot_variant_hash_compare(const godot_variant *p_self, const godot_variant *p_other);
godot_bool godot_variant_booleanize(const godot_variant *p_self, godot_bool *p_valid);
void godot_variant_destroy(godot_variant *p_self);
typedef struct godot_variant godot_variant;
typedef struct godot_transform2d godot_transform2d;
typedef struct godot_vector2 godot_vector2;
typedef struct godot_variant godot_variant;
void godot_transform2d_new2(godot_transform2d *r_dest, const godot_real p_rot, const godot_vector2 *p_pos);
void godot_transform2d_new3(godot_transform2d *r_dest, const godot_vector2 *p_x_axis, const godot_vector2 *p_y_axis, const godot_vector2 *p_origin);
void godot_transform2d_as_string(godot_transform2d *p_self, godot_string *r_dest);
void godot_transform2d_inverse(godot_transform2d *p_self, godot_transform2d *r_dest);
void godot_transform2d_affine_inverse(godot_transform2d *p_self, godot_transform2d *r_dest);
godot_real godot_transform2d_get_rotation(godot_transform2d *p_self);
void godot_transform2d_get_origin(godot_transform2d *p_self, godot_vector2 *r_dest);
void godot_transform2d_get_scale(godot_transform2d *p_self, godot_vector2 *r_dest);
void godot_transform2d_orthonormalized(godot_transform2d *p_self, godot_transform2d *r_dest);
void godot_transform2d_rotated(godot_transform2d *p_self, godot_transform2d *r_dest, const godot_real p_phi);
void godot_transform2d_scaled(godot_transform2d *p_self, godot_transform2d *r_dest, const godot_vector2 *p_scale);
void godot_transform2d_translated(godot_transform2d *p_self, godot_transform2d *r_dest, const godot_vector2 *p_offset);
void godot_transform2d_interpolate_with(godot_transform2d *p_self, godot_transform2d *r_dest, const godot_transform2d *p_m, const godot_real p_c);
typedef struct godot_plane
{
  uint8_t _dont_touch_that[16];
} godot_plane;
typedef struct godot_vector3 godot_vector3;
typedef struct godot_plane godot_plane;
typedef struct godot_variant godot_variant;
void godot_plane_new1(godot_plane *r_dest, const godot_real p_a, const godot_real p_b, const godot_real p_c, const godot_real p_d);
void godot_plane_new2(godot_plane *r_dest, const godot_vector3 *p_v1, const godot_vector3 *p_v2, const godot_vector3 *p_v3);
void godot_plane_new3(godot_plane *r_dest, const godot_vector3 *p_normal, const godot_real p_d);
void godot_plane_as_string(godot_plane *p_self, godot_string *r_dest);
void godot_plane_normalized(godot_plane *p_self, godot_plane *r_dest);
void godot_plane_center(godot_plane *p_self, godot_vector3 *r_dest);
void godot_plane_get_any_point(godot_plane *p_self, godot_vector3 *r_dest);
godot_bool godot_plane_is_point_over(godot_plane *p_self, const godot_vector3 *p_point);
godot_real godot_plane_distance_to(godot_plane *p_self, const godot_vector3 *p_point);
godot_bool godot_plane_has_point(godot_plane *p_self, const godot_vector3 *p_point, const godot_real p_epsilon);
void godot_plane_project(godot_plane *p_self, godot_vector3 *r_dest, const godot_vector3 *p_point);
godot_bool godot_plane_intersect_3(const godot_plane *p_self, godot_vector3 *r_dest, const godot_plane *p_b, const godot_plane *p_c);
godot_bool godot_plane_intersects_ray(const godot_plane *p_self, godot_vector3 *r_dest, const godot_vector3 *p_from, const godot_vector3 *p_dir);
godot_bool godot_plane_intersects_segment(const godot_plane *p_self, godot_vector3 *r_dest, const godot_vector3 *p_begin, const godot_vector3 *p_end);
typedef struct godot_quat
{
  uint8_t _dont_touch_that[16];
} godot_quat;
typedef struct godot_quat godot_quat;
typedef struct godot_vector3 godot_vector3;
typedef struct godot_variant godot_variant;
void godot_quat_new1(godot_quat *r_dest, const godot_real p_x, const godot_real p_y, const godot_real p_z, const godot_real p_w);
void godot_quat_new2(godot_quat *r_dest, const godot_vector3 *p_axis, const godot_real p_angle);
void godot_quat_as_string(godot_quat *p_self, godot_string *r_dest);
godot_real godot_quat_length(godot_quat *p_self);
godot_real godot_quat_length_squared(godot_quat *p_self);
void godot_quat_normalized(godot_quat *p_self, godot_quat *r_dest);
void godot_quat_inverse(godot_quat *p_self, godot_quat *r_dest);
godot_real godot_quat_dot(godot_quat *p_self, const godot_quat *p_b);
void godot_quat_xform(godot_quat *p_self, godot_vector3 *r_dest, const godot_vector3 *p_v);
void godot_quat_slerp(godot_quat *p_self, godot_quat *r_dest, const godot_quat *p_b, const godot_real p_t);
void godot_quat_slerpni(godot_quat *p_self, godot_quat *r_dest, const godot_quat *p_b, const godot_real p_t);
void godot_quat_cubic_slerp(godot_quat *p_self, godot_quat *r_dest, const godot_quat *p_b, const godot_quat *p_pre_a, const godot_quat *p_post_b, const godot_real p_t);
typedef struct godot_rect3
{
  uint8_t _dont_touch_that[24];
} godot_rect3;
typedef struct godot_vector3 godot_vector3;
typedef struct godot_rect3 godot_rect3;
typedef struct godot_plane godot_plane;
typedef struct godot_variant godot_variant;
void godot_rect3_new(godot_rect3 *r_dest, const godot_vector3 *p_pos, const godot_vector3 *p_size);
void godot_rect3_as_string(godot_rect3 *p_self, godot_string *r_dest);
godot_real godot_rect3_get_area(godot_rect3 *p_self);
godot_bool godot_rect3_has_no_area(godot_rect3 *p_self);
godot_bool godot_rect3_has_no_surface(godot_rect3 *p_self);
godot_bool godot_rect3_intersects(godot_rect3 *p_self, const godot_rect3 *p_with);
godot_bool godot_rect3_encloses(godot_rect3 *p_self, const godot_rect3 *p_with);
void godot_rect3_merge(godot_rect3 *p_self, godot_rect3 *r_dest, const godot_rect3 *p_with);
void godot_rect3_intersection(godot_rect3 *p_self, godot_rect3 *r_dest, const godot_rect3 *p_with);
godot_bool godot_rect3_intersects_plane(godot_rect3 *p_self, const godot_plane *p_plane);
godot_bool godot_rect3_intersects_segment(godot_rect3 *p_self, const godot_vector3 *p_from, const godot_vector3 *p_to);
godot_bool godot_rect3_has_point(godot_rect3 *p_self, const godot_vector3 *p_point);
void godot_rect3_get_support(godot_rect3 *p_self, godot_vector3 *r_dest, const godot_vector3 *p_dir);
void godot_rect3_get_longest_axis(godot_rect3 *p_self, godot_vector3 *r_dest);
godot_int godot_rect3_get_longest_axis_index(godot_rect3 *p_self);
godot_real godot_rect3_get_longest_axis_size(godot_rect3 *p_self);
void godot_rect3_get_shortest_axis(godot_rect3 *p_self, godot_vector3 *r_dest);
godot_int godot_rect3_get_shortest_axis_index(godot_rect3 *p_self);
godot_real godot_rect3_get_shortest_axis_size(godot_rect3 *p_self);
void godot_rect3_expand(godot_rect3 *p_self, godot_rect3 *r_dest, const godot_vector3 *p_to_point);
void godot_rect3_grow(godot_rect3 *p_self, godot_rect3 *r_dest, const godot_real p_by);
void godot_rect3_get_endpoint(godot_rect3 *p_self, godot_vector3 *r_dest, const godot_int p_idx);
typedef struct godot_transform
{
  uint8_t _dont_touch_that[48];
} godot_transform;
typedef struct godot_transform godot_transform;
typedef struct godot_basis godot_basis;
typedef struct godot_vector3 godot_vector3;
typedef struct godot_variant godot_variant;
typedef struct godot_variant godot_variant;
void godot_transform_new1(godot_transform *r_dest, const godot_vector3 *p_x_axis, const godot_vector3 *p_y_axis, const godot_vector3 *p_z_axis, const godot_vector3 *p_origin);
void godot_transform_new2(godot_transform *r_dest, const godot_basis *p_basis, const godot_vector3 *p_origin);
void godot_transform_as_string(godot_transform *p_self, godot_string *r_dest);
void godot_transform_inverse(godot_transform *p_self, godot_transform *r_dest);
void godot_transform_affine_inverse(godot_transform *p_self, godot_transform *r_dest);
void godot_transform_orthonormalized(godot_transform *p_self, godot_transform *r_dest);
void godot_transform_rotated(godot_transform *p_self, godot_transform *r_dest, const godot_vector3 *p_axis, const godot_real p_phi);
void godot_transform_scaled(godot_transform *p_self, godot_transform *r_dest, const godot_vector3 *p_scale);
void godot_transform_translated(godot_transform *p_self, godot_transform *r_dest, const godot_vector3 *p_ofs);
void godot_transform_looking_at(godot_transform *p_self, godot_transform *r_dest, const godot_vector3 *p_target, const godot_vector3 *p_up);
typedef struct godot_color
{
  uint8_t _dont_touch_that[16];
} godot_color;
typedef struct godot_string godot_string;
typedef struct godot_color godot_color;
typedef struct godot_variant godot_variant;
void godot_color_new1(godot_color *r_dest, const godot_real p_r, const godot_real p_g, const godot_real p_b, const godot_real p_a);
void godot_color_new2(godot_color *r_dest, const godot_real p_r, const godot_real p_g, const godot_real p_b);
void godot_color_as_string(godot_color *p_self, godot_string *r_dest);
godot_int godot_color_to_32(godot_color *p_self);
godot_int godot_color_to_ARGB32(godot_color *p_self);
godot_real godot_color_gray(godot_color *p_self);
void godot_color_inverted(godot_color *p_self, godot_color *r_dest);
void godot_color_contrasted(godot_color *p_self, godot_color *r_dest);
void godot_color_linear_interpolate(godot_color *p_self, godot_color *r_dest, const godot_color *p_b, const godot_real p_t);
void godot_color_blend(godot_color *p_self, godot_color *r_dest, const godot_color *p_over);
void godot_color_to_html(godot_color *p_self, godot_string *r_dest, const godot_bool p_with_alpha);
typedef struct godot_image
{
  uint8_t _dont_touch_that[32];
} godot_image;
typedef struct godot_image godot_image;
typedef struct godot_pool_byte_array godot_pool_byte_array;
typedef struct godot_vector2 godot_vector2;
typedef struct godot_string godot_string;
typedef struct godot_rect2 godot_rect2;
typedef struct godot_variant godot_variant;
void godot_image_new(godot_image *r_dest, const godot_int p_width, const godot_int p_height, const godot_bool p_mipmaps, const godot_int p_format);
void godot_image_destroy(godot_image *p_self);
typedef enum {GODOT_IMAGE_FORMAT_L8, GODOT_IMAGE_FORMAT_LA8, GODOT_IMAGE_FORMAT_R8, GODOT_IMAGE_FORMAT_RG8, GODOT_IMAGE_FORMAT_RGB8, GODOT_IMAGE_FORMAT_RGBA8, GODOT_IMAGE_FORMAT_RGB565, GODOT_IMAGE_FORMAT_RGBA4444, GODOT_IMAGE_FORMAT_RGBA5551, GODOT_IMAGE_FORMAT_RF, GODOT_IMAGE_FORMAT_RGF, GODOT_IMAGE_FORMAT_RGBF, GODOT_IMAGE_FORMAT_RGBAF, GODOT_IMAGE_FORMAT_RH, GODOT_IMAGE_FORMAT_RGH, GODOT_IMAGE_FORMAT_RGBH, GODOT_IMAGE_FORMAT_RGBAH, GODOT_IMAGE_FORMAT_DXT1, GODOT_IMAGE_FORMAT_DXT3, GODOT_IMAGE_FORMAT_DXT5, GODOT_IMAGE_FORMAT_ATI1, GODOT_IMAGE_FORMAT_ATI2, GODOT_IMAGE_FORMAT_BPTC_RGBA, GODOT_IMAGE_FORMAT_BPTC_RGBF, GODOT_IMAGE_FORMAT_BPTC_RGBFU, GODOT_IMAGE_FORMAT_PVRTC2, GODOT_IMAGE_FORMAT_PVRTC2A, GODOT_IMAGE_FORMAT_PVRTC4, GODOT_IMAGE_FORMAT_PVRTC4A, GODOT_IMAGE_FORMAT_ETC, GODOT_IMAGE_FORMAT_ETC2_R11, GODOT_IMAGE_FORMAT_ETC2_R11S, GODOT_IMAGE_FORMAT_ETC2_RG11, GODOT_IMAGE_FORMAT_ETC2_RG11S, GODOT_IMAGE_FORMAT_ETC2_RGB8, GODOT_IMAGE_FORMAT_ETC2_RGBA8, GODOT_IMAGE_FORMAT_ETC2_RGB8A1, GODOT_IMAGE_FORMAT_MAX} godot_image_format;
godot_int godot_image_get_format(godot_image *p_self);
godot_int godot_image_get_width(godot_image *p_self);
godot_int godot_image_get_height(godot_image *p_self);
godot_bool godot_image_empty(godot_image *p_self);
godot_int godot_image_load(godot_image *p_self, const godot_string *p_path);
godot_int godot_image_save_png(godot_image *p_self, const godot_string *p_path);
void godot_image_get_used_rect(godot_image *p_self, godot_rect2 *r_dest);
void godot_image_get_rect(godot_image *p_self, godot_image *r_dest, const godot_rect2 *p_area);
void godot_image_compressed(godot_image *p_self, godot_image *r_dest, const godot_int p_format);
void godot_image_decompressed(godot_image *p_self, godot_image *r_dest);
void godot_image_resized(godot_image *p_self, godot_image *r_dest, const godot_int p_x, const godot_int p_y, const godot_int p_interpolation);
void godot_image_get_data(godot_image *p_self, godot_pool_byte_array *r_dest);
void godot_image_blit_rect(godot_image *p_self, const godot_image *p_src, const godot_rect2 *p_src_rect, const godot_vector2 *p_dest);
void godot_image_converted(godot_image *p_self, godot_image *r_dest, const godot_int p_format);
void godot_image_fix_alpha_edges(godot_image *p_self);
typedef struct godot_node_path
{
  uint8_t _dont_touch_that[8];
} godot_node_path;
typedef struct godot_string godot_string;
typedef struct godot_variant godot_variant;
void godot_node_path_new(godot_node_path *r_dest);
void godot_node_path_destroy(godot_node_path *p_self);
void godot_node_path_as_string(godot_node_path *p_self, godot_string *r_dest);
godot_bool godot_node_path_is_absolute(godot_node_path *p_self);
godot_int godot_node_path_get_name_count(godot_node_path *p_self);
void godot_node_path_get_name(godot_node_path *p_self, godot_string *r_dest, const godot_int p_idx);
godot_int godot_node_path_get_subname_count(godot_node_path *p_self);
void godot_node_path_get_subname(godot_node_path *p_self, godot_string *r_dest, const godot_int p_idx);
void godot_node_path_get_property(godot_node_path *p_self, godot_string *r_dest);
godot_bool godot_node_path_is_empty(godot_node_path *p_self);
typedef struct godot_rid
{
  uint8_t _dont_touch_that[8];
} godot_rid;
typedef struct godot_variant godot_variant;
void godot_rid_new(godot_rid *r_dest);
godot_int godot_rid_get_id(godot_rid *p_self);
typedef struct godot_input_event
{
  uint8_t _dont_touch_that[56];
} godot_input_event;
enum godot_input_event_type {GODOT_INPUT_EVENT_TYPE_NONE, GODOT_INPUT_EVENT_TYPE_KEY, GODOT_INPUT_EVENT_TYPE_MOUSE_MOTION, GODOT_INPUT_EVENT_TYPE_MOUSE_BUTTON, GODOT_INPUT_EVENT_TYPE_JOYPAD_MOTION, GODOT_INPUT_EVENT_TYPE_JOYPAD_BUTTON, GODOT_INPUT_EVENT_TYPE_SCREEN_TOUCH, GODOT_INPUT_EVENT_TYPE_SCREEN_DRAG, GODOT_INPUT_EVENT_TYPE_ACTION, GODOT_INPUT_EVENT_TYPE_TYPE_MAX};
typedef enum godot_input_event_type godot_input_event_type;
enum {GODOT_BUTTON_LEFT = 1, GODOT_BUTTON_RIGHT = 2, GODOT_BUTTON_MIDDLE = 3, GODOT_BUTTON_WHEEL_UP = 4, GODOT_BUTTON_WHEEL_DOWN = 5, GODOT_BUTTON_WHEEL_LEFT = 6, GODOT_BUTTON_WHEEL_RIGHT = 7, GODOT_BUTTON_MASK_LEFT = 1, GODOT_BUTTON_MASK_RIGHT = 2, GODOT_BUTTON_MASK_MIDDLE = 4};
enum {GODOT_JOY_BUTTON_0 = 0, GODOT_JOY_BUTTON_1 = 1, GODOT_JOY_BUTTON_2 = 2, GODOT_JOY_BUTTON_3 = 3, GODOT_JOY_BUTTON_4 = 4, GODOT_JOY_BUTTON_5 = 5, GODOT_JOY_BUTTON_6 = 6, GODOT_JOY_BUTTON_7 = 7, GODOT_JOY_BUTTON_8 = 8, GODOT_JOY_BUTTON_9 = 9, GODOT_JOY_BUTTON_10 = 10, GODOT_JOY_BUTTON_11 = 11, GODOT_JOY_BUTTON_12 = 12, GODOT_JOY_BUTTON_13 = 13, GODOT_JOY_BUTTON_14 = 14, GODOT_JOY_BUTTON_15 = 15, GODOT_JOY_BUTTON_MAX = 16, GODOT_JOY_L = 4, GODOT_JOY_R = 5, GODOT_JOY_L2 = 6, GODOT_JOY_R2 = 7, GODOT_JOY_L3 = 8, GODOT_JOY_R3 = 9, GODOT_JOY_SELECT = 10, GODOT_JOY_START = 11, GODOT_JOY_DPAD_UP = 12, GODOT_JOY_DPAD_DOWN = 13, GODOT_JOY_DPAD_LEFT = 14, GODOT_JOY_DPAD_RIGHT = 15, GODOT_JOY_SNES_B = 0, GODOT_JOY_SNES_A = 1, GODOT_JOY_SNES_Y = 2, GODOT_JOY_SNES_X = 3, GODOT_JOY_SONY_CIRCLE = 1, GODOT_JOY_SONY_X = 0, GODOT_JOY_SONY_SQUARE = 2, GODOT_JOY_SONY_TRIANGLE = 3, GODOT_JOY_SEGA_B = 1, GODOT_JOY_SEGA_A = 0, GODOT_JOY_SEGA_X = 2, GODOT_JOY_SEGA_Y = 3, GODOT_JOY_XBOX_B = 1, GODOT_JOY_XBOX_A = 0, GODOT_JOY_XBOX_X = 2, GODOT_JOY_XBOX_Y = 3, GODOT_JOY_DS_A = 1, GODOT_JOY_DS_B = 0, GODOT_JOY_DS_X = 3, GODOT_JOY_DS_Y = 2, GODOT_JOY_WII_C = 5, GODOT_JOY_WII_Z = 6, GODOT_JOY_WII_MINUS = 9, GODOT_JOY_WII_PLUS = 10, GODOT_JOY_AXIS_0 = 0, GODOT_JOY_AXIS_1 = 1, GODOT_JOY_AXIS_2 = 2, GODOT_JOY_AXIS_3 = 3, GODOT_JOY_AXIS_4 = 4, GODOT_JOY_AXIS_5 = 5, GODOT_JOY_AXIS_6 = 6, GODOT_JOY_AXIS_7 = 7, GODOT_JOY_AXIS_MAX = 8, GODOT_JOY_ANALOG_0_X = 0, GODOT_JOY_ANALOG_0_Y = 1, GODOT_JOY_ANALOG_1_X = 2, GODOT_JOY_ANALOG_1_Y = 3, GODOT_JOY_ANALOG_2_X = 4, GODOT_JOY_ANALOG_2_Y = 5, GODOT_JOY_ANALOG_L2 = 6, GODOT_JOY_ANALOG_R2 = 7};
void godot_input_event_new(godot_input_event *p_ie);
godot_bool godot_input_event_is_pressed(const godot_input_event *p_ie);
godot_bool godot_input_event_is_action(const godot_input_event *p_ie, const godot_string *p_action);
godot_bool godot_input_event_is_action_pressed(const godot_input_event *p_ie, const godot_string *p_action);
godot_bool godot_input_event_is_action_released(const godot_input_event *p_ie, const godot_string *p_action);
godot_bool godot_input_event_is_echo(const godot_input_event *p_ie);
void godot_input_event_set_as_action(godot_input_event *p_ie, const godot_string *p_action, const godot_bool p_pressed);
godot_string godot_input_event_as_string(const godot_input_event *p_ie);
uint32_t *godot_input_event_get_id(godot_input_event *p_ie);
godot_input_event_type *godot_input_event_get_type(godot_input_event *p_ie);
godot_int *godot_input_event_get_device(godot_input_event *p_ie);
godot_bool *godot_input_event_mod_get_alt(godot_input_event *p_event);
godot_bool *godot_input_event_mod_get_ctrl(godot_input_event *p_event);
godot_bool *godot_input_event_mod_get_command(godot_input_event *p_event);
godot_bool *godot_input_event_mod_get_shift(godot_input_event *p_event);
godot_bool *godot_input_event_mod_get_meta(godot_input_event *p_event);
uint32_t *godot_input_event_key_get_scancode(godot_input_event *p_event);
uint32_t *godot_input_event_key_get_unicode(godot_input_event *p_event);
godot_bool *godot_input_event_key_get_pressed(godot_input_event *p_event);
godot_bool *godot_input_event_key_get_echo(godot_input_event *p_event);
float *godot_input_event_mouse_get_x(godot_input_event *p_event);
float *godot_input_event_mouse_get_y(godot_input_event *p_event);
float *godot_input_event_mouse_get_global_x(godot_input_event *p_event);
float *godot_input_event_mouse_get_global_y(godot_input_event *p_event);
godot_int *godot_input_event_mouse_get_button_mask(godot_input_event *p_event);
godot_int *godot_input_event_mouse_button_get_button_index(godot_input_event *p_event);
godot_bool *godot_input_event_mouse_button_get_pressed(godot_input_event *p_event);
godot_bool *godot_input_event_mouse_button_get_doubleclick(godot_input_event *p_event);
float *godot_input_event_mouse_motion_get_relative_x(godot_input_event *p_event);
float *godot_input_event_mouse_motion_get_relative_y(godot_input_event *p_event);
float *godot_input_event_mouse_motion_get_speed_x(godot_input_event *p_event);
float *godot_input_event_mouse_motion_get_speed_y(godot_input_event *p_event);
godot_int *godot_input_event_joypad_motion_get_axis(godot_input_event *p_event);
float *godot_input_event_joypad_motion_get_axis_value(godot_input_event *p_event);
godot_int *godot_input_event_joypad_button_get_button_index(godot_input_event *p_event);
godot_bool *godot_input_event_joypad_button_get_pressed(godot_input_event *p_event);
float *godot_input_event_joypad_button_get_pressure(godot_input_event *p_event);
godot_int *godot_input_event_screen_touch_get_index(godot_input_event *p_event);
float *godot_input_event_screen_touch_get_x(godot_input_event *p_event);
float *godot_input_event_screen_touch_get_y(godot_input_event *p_event);
godot_bool *godot_input_event_screen_touch_get_pressed(godot_input_event *p_event);
godot_int *godot_input_event_screen_drag_get_index(godot_input_event *p_event);
float *godot_input_event_screen_drag_get_x(godot_input_event *p_event);
float *godot_input_event_screen_drag_get_y(godot_input_event *p_event);
float *godot_input_event_screen_drag_get_relative_x(godot_input_event *p_event);
float *godot_input_event_screen_drag_get_relative_y(godot_input_event *p_event);
float *godot_input_event_screen_drag_get_speed_x(godot_input_event *p_event);
float *godot_input_event_screen_drag_get_speed_y(godot_input_event *p_event);
typedef struct godot_dictionary
{
  uint8_t _dont_touch_that[8];
} godot_dictionary;
typedef struct godot_array godot_array;
typedef struct godot_variant godot_variant;
typedef struct godot_variant godot_variant;
void godot_dictionary_new(godot_dictionary *r_dest);
void godot_dictionary_destroy(godot_dictionary *p_self);
godot_int godot_dictionary_size(godot_dictionary *p_self);
godot_bool godot_dictionary_empty(godot_dictionary *p_self);
void godot_dictionary_clear(godot_dictionary *p_self);
godot_bool godot_dictionary_has(godot_dictionary *p_self, const godot_variant *p_key);
godot_bool godot_dictionary_has_all(godot_dictionary *p_self, const godot_array *p_keys);
void godot_dictionary_erase(godot_dictionary *p_self, const godot_variant *p_key);
godot_int godot_dictionary_hash(godot_dictionary *p_self);
void godot_dictionary_keys(godot_dictionary *p_self, godot_array *r_dest);
void godot_dictionary_values(godot_dictionary *p_self, godot_array *r_dest);
void godot_dictionary_operator_index(godot_dictionary *p_dict, godot_variant *r_dest, const godot_variant *p_key);
void godot_dictionary_to_json(const godot_dictionary *p_dict, godot_string *r_dest);
typedef struct godot_array
{
  uint8_t _dont_touch_that[8];
} godot_array;
typedef struct godot_pool_byte_array
{
  uint8_t _dont_touch_that[8];
} godot_pool_byte_array;
typedef struct godot_pool_int_array
{
  uint8_t _dont_touch_that[8];
} godot_pool_int_array;
typedef struct godot_pool_real_array
{
  uint8_t _dont_touch_that[8];
} godot_pool_real_array;
typedef struct godot_pool_string_array
{
  uint8_t _dont_touch_that[8];
} godot_pool_string_array;
typedef struct godot_pool_vector2_array
{
  uint8_t _dont_touch_that[8];
} godot_pool_vector2_array;
typedef struct godot_pool_vector3_array
{
  uint8_t _dont_touch_that[8];
} godot_pool_vector3_array;
typedef struct godot_pool_color_array
{
  uint8_t _dont_touch_that[8];
} godot_pool_color_array;
void godot_pool_byte_array_new(godot_pool_byte_array *p_pba);
void godot_pool_byte_array_new_with_array(godot_pool_byte_array *p_pba, const godot_array *p_a);
void godot_pool_byte_array_append(godot_pool_byte_array *p_pba, const uint8_t p_data);
void godot_pool_byte_array_append_array(godot_pool_byte_array *p_pba, const godot_pool_byte_array *p_array);
int godot_pool_byte_array_insert(godot_pool_byte_array *p_pba, const godot_int p_idx, const uint8_t p_data);
void godot_pool_byte_array_invert(godot_pool_byte_array *p_pba);
void godot_pool_byte_array_push_back(godot_pool_byte_array *p_pba, const uint8_t p_data);
void godot_pool_byte_array_remove(godot_pool_byte_array *p_pba, const godot_int p_idx);
void godot_pool_byte_array_resize(godot_pool_byte_array *p_pba, const godot_int p_size);
void godot_pool_byte_array_set(godot_pool_byte_array *p_pba, const godot_int p_idx, const uint8_t p_data);
uint8_t godot_pool_byte_array_get(godot_pool_byte_array *p_pba, const godot_int p_idx);
godot_int godot_pool_byte_array_size(godot_pool_byte_array *p_pba);
void godot_pool_byte_array_destroy(godot_pool_byte_array *p_pba);
void godot_pool_int_array_new(godot_pool_int_array *p_pia);
void godot_pool_int_array_new_with_array(godot_pool_int_array *p_pia, const godot_array *p_a);
void godot_pool_int_array_append(godot_pool_int_array *p_pia, const godot_int p_data);
void godot_pool_int_array_append_array(godot_pool_int_array *p_pia, const godot_pool_int_array *p_array);
int godot_pool_int_array_insert(godot_pool_int_array *p_pia, const godot_int p_idx, const godot_int p_data);
void godot_pool_int_array_invert(godot_pool_int_array *p_pia);
void godot_pool_int_array_push_back(godot_pool_int_array *p_pia, const godot_int p_data);
void godot_pool_int_array_remove(godot_pool_int_array *p_pia, const godot_int p_idx);
void godot_pool_int_array_resize(godot_pool_int_array *p_pia, const godot_int p_size);
void godot_pool_int_array_set(godot_pool_int_array *p_pia, const godot_int p_idx, const godot_int p_data);
godot_int godot_pool_int_array_get(godot_pool_int_array *p_pia, const godot_int p_idx);
godot_int godot_pool_int_array_size(godot_pool_int_array *p_pia);
void godot_pool_int_array_destroy(godot_pool_int_array *p_pia);
void godot_pool_real_array_new(godot_pool_real_array *p_pra);
void godot_pool_real_array_new_with_array(godot_pool_real_array *p_pra, const godot_array *p_a);
void godot_pool_real_array_append(godot_pool_real_array *p_pra, const godot_real p_data);
void godot_pool_real_array_append_array(godot_pool_real_array *p_pra, const godot_pool_real_array *p_array);
int godot_pool_real_array_insert(godot_pool_real_array *p_pra, const godot_int p_idx, const godot_real p_data);
void godot_pool_real_array_invert(godot_pool_real_array *p_pra);
void godot_pool_real_array_push_back(godot_pool_real_array *p_pra, const godot_real p_data);
void godot_pool_real_array_remove(godot_pool_real_array *p_pra, const godot_int p_idx);
void godot_pool_real_array_resize(godot_pool_real_array *p_pra, const godot_int p_size);
void godot_pool_real_array_set(godot_pool_real_array *p_pra, const godot_int p_idx, const godot_real p_data);
godot_real godot_pool_real_array_get(godot_pool_real_array *p_pra, const godot_int p_idx);
godot_int godot_pool_real_array_size(godot_pool_real_array *p_pra);
void godot_pool_real_array_destroy(godot_pool_real_array *p_pra);
void godot_pool_string_array_new(godot_pool_string_array *p_psa);
void godot_pool_string_array_new_with_array(godot_pool_string_array *p_psa, const godot_array *p_a);
void godot_pool_string_array_append(godot_pool_string_array *p_psa, const godot_string *p_data);
void godot_pool_string_array_append_array(godot_pool_string_array *p_psa, const godot_pool_string_array *p_array);
int godot_pool_string_array_insert(godot_pool_string_array *p_psa, const godot_int p_idx, const godot_string *p_data);
void godot_pool_string_array_invert(godot_pool_string_array *p_psa);
void godot_pool_string_array_push_back(godot_pool_string_array *p_psa, const godot_string *p_data);
void godot_pool_string_array_remove(godot_pool_string_array *p_psa, const godot_int p_idx);
void godot_pool_string_array_resize(godot_pool_string_array *p_psa, const godot_int p_size);
void godot_pool_string_array_set(godot_pool_string_array *p_psa, const godot_int p_idx, const godot_string *p_data);
godot_string godot_pool_string_array_get(godot_pool_string_array *p_psa, const godot_int p_idx);
godot_int godot_pool_string_array_size(godot_pool_string_array *p_psa);
void godot_pool_string_array_destroy(godot_pool_string_array *p_psa);
void godot_pool_vector2_array_new(godot_pool_vector2_array *p_pv2a);
void godot_pool_vector2_array_new_with_array(godot_pool_vector2_array *p_pv2a, const godot_array *p_a);
void godot_pool_vector2_array_append(godot_pool_vector2_array *p_pv2a, const godot_vector2 *p_data);
void godot_pool_vector2_array_append_array(godot_pool_vector2_array *p_pv2a, const godot_pool_vector2_array *p_array);
int godot_pool_vector2_array_insert(godot_pool_vector2_array *p_pv2a, const godot_int p_idx, const godot_vector2 *p_data);
void godot_pool_vector2_array_invert(godot_pool_vector2_array *p_pv2a);
void godot_pool_vector2_array_push_back(godot_pool_vector2_array *p_pv2a, const godot_vector2 *p_data);
void godot_pool_vector2_array_remove(godot_pool_vector2_array *p_pv2a, const godot_int p_idx);
void godot_pool_vector2_array_resize(godot_pool_vector2_array *p_pv2a, const godot_int p_size);
void godot_pool_vector2_array_set(godot_pool_vector2_array *p_pv2a, const godot_int p_idx, const godot_vector2 *p_data);
godot_vector2 godot_pool_vector2_array_get(godot_pool_vector2_array *p_pv2a, const godot_int p_idx);
godot_int godot_pool_vector2_array_size(godot_pool_vector2_array *p_pv2a);
void godot_pool_vector2_array_destroy(godot_pool_vector2_array *p_pv2a);
void godot_pool_vector3_array_new(godot_pool_vector3_array *p_pv3a);
void godot_pool_vector3_array_new_with_array(godot_pool_vector3_array *p_pv3a, const godot_array *p_a);
void godot_pool_vector3_array_append(godot_pool_vector3_array *p_pv3a, const godot_vector3 *p_data);
void godot_pool_vector3_array_append_array(godot_pool_vector3_array *p_pv3a, const godot_pool_vector3_array *p_array);
int godot_pool_vector3_array_insert(godot_pool_vector3_array *p_pv3a, const godot_int p_idx, const godot_vector3 *p_data);
void godot_pool_vector3_array_invert(godot_pool_vector3_array *p_pv3a);
void godot_pool_vector3_array_push_back(godot_pool_vector3_array *p_pv3a, const godot_vector3 *p_data);
void godot_pool_vector3_array_remove(godot_pool_vector3_array *p_pv3a, const godot_int p_idx);
void godot_pool_vector3_array_resize(godot_pool_vector3_array *p_pv3a, const godot_int p_size);
void godot_pool_vector3_array_set(godot_pool_vector3_array *p_pv3a, const godot_int p_idx, const godot_vector3 *p_data);
godot_vector3 godot_pool_vector3_array_get(godot_pool_vector3_array *p_pv3a, const godot_int p_idx);
godot_int godot_pool_vector3_array_size(godot_pool_vector3_array *p_pv3a);
void godot_pool_vector3_array_destroy(godot_pool_vector3_array *p_pv3a);
void godot_pool_color_array_new(godot_pool_color_array *p_pca);
void godot_pool_color_array_new_with_array(godot_pool_color_array *p_pca, const godot_array *p_a);
void godot_pool_color_array_append(godot_pool_color_array *p_pca, const godot_color *p_data);
void godot_pool_color_array_append_array(godot_pool_color_array *p_pca, const godot_pool_color_array *p_array);
int godot_pool_color_array_insert(godot_pool_color_array *p_pca, const godot_int p_idx, const godot_color *p_data);
void godot_pool_color_array_invert(godot_pool_color_array *p_pca);
void godot_pool_color_array_push_back(godot_pool_color_array *p_pca, const godot_color *p_data);
void godot_pool_color_array_remove(godot_pool_color_array *p_pca, const godot_int p_idx);
void godot_pool_color_array_resize(godot_pool_color_array *p_pca, const godot_int p_size);
void godot_pool_color_array_set(godot_pool_color_array *p_pca, const godot_int p_idx, const godot_color *p_data);
godot_color godot_pool_color_array_get(godot_pool_color_array *p_pca, const godot_int p_idx);
godot_int godot_pool_color_array_size(godot_pool_color_array *p_pca);
void godot_pool_color_array_destroy(godot_pool_color_array *p_pca);
void godot_array_new(godot_array *p_arr);
void godot_array_new_pool_color_array(godot_array *p_arr, const godot_pool_color_array *p_pca);
void godot_array_new_pool_vector3_array(godot_array *p_arr, const godot_pool_vector3_array *p_pv3a);
void godot_array_new_pool_vector2_array(godot_array *p_arr, const godot_pool_vector2_array *p_pv2a);
void godot_array_new_pool_string_array(godot_array *p_arr, const godot_pool_string_array *p_psa);
void godot_array_new_pool_real_array(godot_array *p_arr, const godot_pool_real_array *p_pra);
void godot_array_new_pool_int_array(godot_array *p_arr, const godot_pool_int_array *p_pia);
void godot_array_new_pool_byte_array(godot_array *p_arr, const godot_pool_byte_array *p_pba);
void godot_array_set(godot_array *p_arr, const godot_int p_idx, const godot_variant *p_value);
godot_variant *godot_array_get(godot_array *p_arr, const godot_int p_idx);
void godot_array_append(godot_array *p_arr, const godot_variant *p_value);
void godot_array_clear(godot_array *p_arr);
godot_int godot_array_count(godot_array *p_arr, const godot_variant *p_value);
godot_bool godot_array_empty(const godot_array *p_arr);
void godot_array_erase(godot_array *p_arr, const godot_variant *p_value);
godot_variant godot_array_front(const godot_array *p_arr);
godot_variant godot_array_back(const godot_array *p_arr);
godot_int godot_array_find(const godot_array *p_arr, const godot_variant *p_what, const godot_int p_from);
godot_int godot_array_find_last(const godot_array *p_arr, const godot_variant *p_what);
godot_bool godot_array_has(const godot_array *p_arr, const godot_variant *p_value);
uint32_t godot_array_hash(const godot_array *p_arr);
void godot_array_insert(godot_array *p_arr, const godot_int p_pos, const godot_variant *p_value);
void godot_array_invert(godot_array *p_arr);
godot_bool godot_array_is_shared(const godot_array *p_arr);
godot_variant godot_array_pop_back(godot_array *p_arr);
godot_variant godot_array_pop_front(godot_array *p_arr);
void godot_array_push_back(godot_array *p_arr, const godot_variant *p_value);
void godot_array_push_front(godot_array *p_arr, const godot_variant *p_value);
void godot_array_remove(godot_array *p_arr, const godot_int p_idx);
void godot_array_resize(godot_array *p_arr, const godot_int p_size);
godot_int godot_array_rfind(const godot_array *p_arr, const godot_variant *p_what, const godot_int p_from);
godot_int godot_array_size(const godot_array *p_arr);
void godot_array_sort(godot_array *p_arr);
void godot_array_sort_custom(godot_array *p_arr, godot_object *p_obj, const godot_string *p_func);
void godot_array_destroy(godot_array *p_arr);
void godot_object_destroy(godot_object *p_o);
godot_object *godot_global_get_singleton(char *p_name);
typedef struct godot_method_bind
{
  uint8_t _dont_touch_that[1];
} godot_method_bind;
godot_method_bind *godot_method_bind_get_method(const char *p_classname, const char *p_methodname);
void godot_method_bind_ptrcall(godot_method_bind *p_method_bind, godot_object *p_instance, const void **p_args, void *p_ret);
typedef struct godot_native_init_options
{
  godot_bool in_editor;
  uint64_t core_api_hash;
  uint64_t editor_api_hash;
  uint64_t no_api_hash;
} godot_native_init_options;
typedef struct godot_native_terminate_options
{
  godot_bool in_editor;
} godot_native_terminate_options;
typedef enum godot_method_rpc_mode {GODOT_METHOD_RPC_MODE_DISABLED, GODOT_METHOD_RPC_MODE_REMOTE, GODOT_METHOD_RPC_MODE_SYNC, GODOT_METHOD_RPC_MODE_MASTER, GODOT_METHOD_RPC_MODE_SLAVE} godot_method_rpc_mode;
typedef struct godot_method_attributes
{
  godot_method_rpc_mode rpc_type;
} godot_method_attributes;
typedef enum godot_property_hint {GODOT_PROPERTY_HINT_NONE, GODOT_PROPERTY_HINT_RANGE, GODOT_PROPERTY_HINT_EXP_RANGE, GODOT_PROPERTY_HINT_ENUM, GODOT_PROPERTY_HINT_EXP_EASING, GODOT_PROPERTY_HINT_LENGTH, GODOT_PROPERTY_HINT_SPRITE_FRAME, GODOT_PROPERTY_HINT_KEY_ACCEL, GODOT_PROPERTY_HINT_FLAGS, GODOT_PROPERTY_HINT_LAYERS_2D_RENDER, GODOT_PROPERTY_HINT_LAYERS_2D_PHYSICS, GODOT_PROPERTY_HINT_LAYERS_3D_RENDER, GODOT_PROPERTY_HINT_LAYERS_3D_PHYSICS, GODOT_PROPERTY_HINT_FILE, GODOT_PROPERTY_HINT_DIR, GODOT_PROPERTY_HINT_GLOBAL_FILE, GODOT_PROPERTY_HINT_GLOBAL_DIR, GODOT_PROPERTY_HINT_RESOURCE_TYPE, GODOT_PROPERTY_HINT_MULTILINE_TEXT, GODOT_PROPERTY_HINT_COLOR_NO_ALPHA, GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSY, GODOT_PROPERTY_HINT_IMAGE_COMPRESS_LOSSLESS, GODOT_PROPERTY_HINT_OBJECT_ID, GODOT_PROPERTY_HINT_TYPE_STRING, GODOT_PROPERTY_HINT_NODE_PATH_TO_EDITED_NODE, GODOT_PROPERTY_HINT_METHOD_OF_VARIANT_TYPE, GODOT_PROPERTY_HINT_METHOD_OF_BASE_TYPE, GODOT_PROPERTY_HINT_METHOD_OF_INSTANCE, GODOT_PROPERTY_HINT_METHOD_OF_SCRIPT, GODOT_PROPERTY_HINT_PROPERTY_OF_VARIANT_TYPE, GODOT_PROPERTY_HINT_PROPERTY_OF_BASE_TYPE, GODOT_PROPERTY_HINT_PROPERTY_OF_INSTANCE, GODOT_PROPERTY_HINT_PROPERTY_OF_SCRIPT, GODOT_PROPERTY_HINT_MAX} godot_property_hint;
typedef enum godot_property_usage_flags {GODOT_PROPERTY_USAGE_STORAGE = 1, GODOT_PROPERTY_USAGE_EDITOR = 2, GODOT_PROPERTY_USAGE_NETWORK = 4, GODOT_PROPERTY_USAGE_EDITOR_HELPER = 8, GODOT_PROPERTY_USAGE_CHECKABLE = 16, GODOT_PROPERTY_USAGE_CHECKED = 32, GODOT_PROPERTY_USAGE_INTERNATIONALIZED = 64, GODOT_PROPERTY_USAGE_GROUP = 128, GODOT_PROPERTY_USAGE_CATEGORY = 256, GODOT_PROPERTY_USAGE_STORE_IF_NONZERO = 512, GODOT_PROPERTY_USAGE_STORE_IF_NONONE = 1024, GODOT_PROPERTY_USAGE_NO_INSTANCE_STATE = 2048, GODOT_PROPERTY_USAGE_RESTART_IF_CHANGED = 4096, GODOT_PROPERTY_USAGE_SCRIPT_VARIABLE = 8192, GODOT_PROPERTY_USAGE_STORE_IF_NULL = 16384, GODOT_PROPERTY_USAGE_ANIMATE_AS_TRIGGER = 32768, GODOT_PROPERTY_USAGE_UPDATE_ALL_IF_MODIFIED = 65536, GODOT_PROPERTY_USAGE_DEFAULT = 7, GODOT_PROPERTY_USAGE_DEFAULT_INTL = 71, GODOT_PROPERTY_USAGE_NOEDITOR = 5} godot_property_usage_flags;
typedef struct godot_property_attributes
{
  godot_method_rpc_mode rset_type;
  godot_int type;
  godot_property_hint hint;
  godot_string hint_string;
  godot_property_usage_flags usage;
  godot_variant default_value;
} godot_property_attributes;
typedef struct godot_instance_create_func
{
  void *(*create_func)(godot_object *, void *);
  void *method_data;
  void (*free_func)(void *);
} godot_instance_create_func;
typedef struct godot_instance_destroy_func
{
  void (*destroy_func)(godot_object *, void *, void *);
  void *method_data;
  void (*free_func)(void *);
} godot_instance_destroy_func;
void godot_script_register_class(const char *p_name, const char *p_base, godot_instance_create_func p_create_func, godot_instance_destroy_func p_destroy_func);
void godot_script_register_tool_class(const char *p_name, const char *p_base, godot_instance_create_func p_create_func, godot_instance_destroy_func p_destroy_func);
typedef struct godot_instance_method
{
  godot_variant (*method)(godot_object *, void *, void *, int, godot_variant **);
  void *method_data;
  void (*free_func)(void *);
} godot_instance_method;
void godot_script_register_method(const char *p_name, const char *p_function_name, godot_method_attributes p_attr, godot_instance_method p_method);
typedef struct godot_property_set_func
{
  void (*set_func)(godot_object *, void *, void *, godot_variant);
  void *method_data;
  void (*free_func)(void *);
} godot_property_set_func;
typedef struct godot_property_get_func
{
  godot_variant (*get_func)(godot_object *, void *, void *);
  void *method_data;
  void (*free_func)(void *);
} godot_property_get_func;
void godot_script_register_property(const char *p_name, const char *p_path, godot_property_attributes *p_attr, godot_property_set_func p_set_func, godot_property_get_func p_get_func);
typedef struct godot_signal_argument
{
  godot_string name;
  godot_int type;
  godot_property_hint hint;
  godot_string hint_string;
  godot_property_usage_flags usage;
  godot_variant default_value;
} godot_signal_argument;
typedef struct godot_signal
{
  godot_string name;
  int num_args;
  godot_signal_argument *args;
  int num_default_args;
  godot_variant *default_args;
} godot_signal;
void godot_script_register_signal(const char *p_name, const godot_signal *p_signal);
void *godot_native_get_userdata(godot_object *p_instance);
typedef godot_object *(*godot_class_constructor)();
godot_class_constructor godot_get_class_constructor(const char *p_classname);
godot_dictionary godot_get_global_constants();
void *godot_alloc(int p_bytes);
void *godot_realloc(void *p_ptr, int p_bytes);
void godot_free(void *p_ptr);
