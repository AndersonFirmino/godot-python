// TODO: should be autogenerated

#include "micropython.h"
// Godot imports
#include "core/object.h"
#include "core/map.h"
#include "scene/main/node.h"
// Pythonscript imports
#include "bindings/godot_type_binder.h"


namespace pythonscript { namespace bindings {

// micropython only defines MP_DEFINE_CONST_DICT...
#define MP_DEFINE_DICT(dict_name, table_name) \
    mp_obj_dict_t dict_name = { \
        .base = {&mp_type_dict}, \
        .map = { \
            .all_keys_are_qstrs = 1, \
            .is_fixed = 1, \
            .is_ordered = 1, \
            .used = MP_ARRAY_SIZE(table_name), \
            .alloc = MP_ARRAY_SIZE(table_name), \
            .table = (mp_map_elem_t*)(mp_rom_map_elem_t*)table_name, \
        }, \
    }

static GodotTypeBinder<Object> godot_binder_object;
static GodotTypeBinder<Node> godot_binder_node;

static List<BaseGodotTypeBinder> binders;
static mp_map_elem_t godot_bindings_module_globals_table[100];  // To be populate by the init
static MP_DEFINE_DICT(godot_bindings_module_globals, godot_bindings_module_globals_table);
const mp_obj_module_t godot_bindings_module = {
    .base = { &mp_type_module },
    .globals = &godot_bindings_module_globals
};


void godot_binding_module_init() {
    const char *name_name = "__name__";
    const char *module_name = "types";
    godot_bindings_module_globals_table[0] = {
        mp_obj_new_str(name_name, sizeof(name_name), true),
        mp_obj_new_str(module_name, sizeof(module_name), true)
    };

    // TODO: use ObjectTypeDB::get_type_list()
    const char *object_name = "Object";
    godot_binder_object.init();
    godot_bindings_module_globals_table[1] = {
        mp_obj_new_str(object_name, sizeof(object_name), true),
        MP_OBJ_FROM_PTR(godot_binder_object.get_mp_obj_type())
    };

    const char *node_name = "Node";
    godot_binder_node.init();
    godot_bindings_module_globals_table[2] = {
        mp_obj_new_str(node_name, sizeof(node_name), true),
        MP_OBJ_FROM_PTR(godot_binder_node.get_mp_obj_type())
    };

    mp_module_register(qstr_from_str("godot_bindings"), MP_OBJ_FROM_PTR(&godot_bindings_module));
}

void godot_binding_module_finish() {

}


} }  // namespaces
